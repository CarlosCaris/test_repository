filter(str_detect(Curso, "A"))
datitos.B = datitos %>%
filter(str_detect(Curso, "B"))
as.data.frame(table(datitos.A$`Me siento calmado`))
datitos.A.q1 = as.data.frame(table(datitos.A$`Me siento calmado`,datitos.A$`Me siento seguro...7`))
datitos.A.q1
datitos.A.q1 = as.data.frame(table(datitos.A$`Me siento calmado`))
datitos.A.q1
str(datitos.A)
datitos.A[,5:24]
str(datitos.A[,5:24])
datitos.A[,6:24]
as.vector(datitos.A[,6:24])
lapply(datitos.A, table)
lapply(datitos.A[,6:24], table)
as.data.frame(lapply(datitos.A[,6:24], table))
apply(datitos.A[,6:24],2, table)
as.data.frame(apply(datitos.A[,6:24],2, table))
apply(datitos.A[,6:24],2, table)
kk = apply(datitos.A[,6:24],2, table)
as.data.frame(kk)
lapply(datitos.A, function(x) data.frame(table(x)))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si
class(esta.si)
as.data.frame(esta.si)
melt(esta.si)
esta.si.melt = melt(esta.si)
esta.si.melt
head(esta.si)
View(esta.si.melt)
esta.si.melt = melt(esta.si)
esta.si.melt[94:251,]
esta.si.melt = esta.si.melt[94:251,]
View(esta.si.melt)
library(ggpubr)
ggbarplot(esta.si.melt, x = "x", y = "Value")
ggbarplot(esta.si.melt, x = "x", y = "value")
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1")
esta.si.melt = esta.si.melt[94:172,]
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1")
View(datitos)
str(datitos)
esta.si.melt = esta.si.melt[94:172,]
View(esta.si.melt)
esta.si.melt = melt(esta.si)
esta.si.melt = esta.si.melt[94:172,]
esta.si.melt
str(datitos)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1")
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1") + xlim(1, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1") + ylim(1, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1") + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_minimal()) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_classic()) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_light()) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_linedraw()) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw()) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
color = "orange") + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "orange", label = esta.si.melt$value) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt$value) + ylim(0, 35)
ggbarplot(esta.si.melt, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt$value) + ylim(0, 40)
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt = melt(esta.si)
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt$value) + ylim(0, 40)
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
datitos = as.data.frame(read_excel("/Users/carlo/Downloads/Inventario de Ansiedad Estado-Rasgo (State-Trait Anxiety Inventory, STAI) (respuestas)-2.xlsx"))
datitos = datitos %>% mutate_if(is.character, as.factor)
datitos.A = datitos %>%
filter(str_detect(Curso, "A"))
datitos.B = datitos %>%
filter(str_detect(Curso, "B"))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt$value) + ylim(0, 40)
esta.si.melt.p1
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
percent.table(Wages$south,Wages$occup)
install.packages("sur")
percent.table(Wages$south,Wages$occup)
help(sur)
library(sur)
percent.table(esta.si.melt.p1$x, esta.si.melt.p1$L1)
esta.si.melt.p1
percent.table(esta.si.melt.p1$x)
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
View(esta.si.melt_)
esta.si.melt.p2 = esta.si.melt_[173:,251]
ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
esta.si.melt.p2 = esta.si.melt_[173:,251]
esta.si.melt.p2 = esta.si.melt_[173:251,]
ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40) + theme()
ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
esta.si.melt.p2 = esta.si.melt_[173:251,]
ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40) + theme()
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45)
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45)
dim(esta.si.melt.p2)
p2 = ggbarplot(esta.si.melt.p2[1:74,], x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45)
p2 = ggbarplot(esta.si.melt.p2[1:74,], x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2[1:74,]$value) + ylim(0, 40)
View(esta.si.melt.p2)
esta.si.melt.p2 = esta.si.melt_[173:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45)
p2 = ggbarplot(esta.si.melt.p2[1:74,], x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2[1:74,]$value) + ylim(0, 40)
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2[1:74,]$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45)
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 12, color = "red", face = "bold.italic"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 8, color = "red", face = "bold.italic"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 4, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 7, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.5, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.1, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.2, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.3, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.4, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.35, color = "black", face = "bold"
))
ggpar(p1, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.35, color = "black", face = "bold"
))
ggpar(p1, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 10, color = "black", face = "bold"
))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
esta.si.melt.p2 = esta.si.melt_[173:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 10, color = "black", face = "bold"
))
ggpar(p1, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 10, color = "black", face = "bold"
), axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(
strip.text.x = element_text(
size = 6.35, color = "black", face = "bold"
))
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
datitos = as.data.frame(read_excel("/Users/carlo/Downloads/Inventario de Ansiedad Estado-Rasgo (State-Trait Anxiety Inventory, STAI) (respuestas)-2.xlsx"))
source('~/.active-rstudio-document', echo=TRUE)
as.data.frame(percent.table(esta.si.melt.p1$x))
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
esta.si.melt.p2 = esta.si.melt_[173:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
datitos.B
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,]
esta.si.melt.p2 = esta.si.melt_[173:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si.melt.p1
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
View(esta.si.melt_)
str(datitos)
esta.si.melt.p1 = esta.si.melt_[89:167,]
View(esta.si.melt.p1)
View(esta.si.melt_)
esta.si.melt.p2 = esta.si.melt_[168:246,]
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[89:167,]
esta.si.melt.p2 = esta.si.melt_[168:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si.melt.p1$variable
esta.si.melt.p1$value
esta.si.melt.p1$L1
esta.si.melt.p1$x
esta.si.melt.p1$x <- ordered(esta.si.melt.p1$x, levels = c("Nada", "Algo", " Bastante", "Mucho"))
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si.melt.p1$x
datitos = as.data.frame(read_excel("/Users/carlo/Downloads/Inventario de Ansiedad Estado-Rasgo (State-Trait Anxiety Inventory, STAI) (respuestas)-2.xlsx"))
datitos = datitos %>% mutate_if(is.character, as.factor)
datitos.A = datitos %>%
filter(str_detect(Curso, "A"))
datitos.B = datitos %>%
filter(str_detect(Curso, "B"))
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[89:167,]
esta.si.melt.p1$x <- ordered(esta.si.melt.p1$x, levels = c("Nada", "Algo", "Bastante", "Mucho"))
esta.si.melt.p2 = esta.si.melt_[168:246,]
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si.melt.p2$x
unique(esta.si.melt.p2$x)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si.melt.p2$x = ordered(esta.si.melt.p1$x, levels = c("Casi nunca", "A veces", "A menudo", "Casi siempre"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
datitos = as.data.frame(read_excel("/Users/carlo/Downloads/Inventario de Ansiedad Estado-Rasgo (State-Trait Anxiety Inventory, STAI) (respuestas)-2.xlsx"))
datitos = datitos %>% mutate_if(is.character, as.factor)
datitos.A = datitos %>%
filter(str_detect(Curso, "A"))
datitos.B = datitos %>%
filter(str_detect(Curso, "B"))
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[89:167,]
esta.si.melt.p1$x = ordered(esta.si.melt.p1$x, levels = c("Nada", "Algo", "Bastante", "Mucho"))
esta.si.melt.p2 = esta.si.melt_[168:246,]
esta.si.melt.p2$x = ordered(esta.si.melt.p2$x, levels = c("Casi nunca", "A veces", "A menudo", "Casi siempre"))
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[89:167,]
esta.si = lapply(datitos.B, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[89:167,]
esta.si.melt.p1$x = ordered(esta.si.melt.p1$x, levels = c("Nada", "Algo", "Bastante", "Mucho"))
esta.si.melt.p2 = esta.si.melt_[168:246,]
esta.si.melt.p2$x = ordered(esta.si.melt.p2$x, levels = c("Casi nunca", "A veces", "A menudo", "Casi siempre"))
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
View(esta.si.melt_)
View(esta.si.melt_)
datitos = as.data.frame(read_excel("/Users/carlo/Downloads/Inventario de Ansiedad Estado-Rasgo (State-Trait Anxiety Inventory, STAI) (respuestas)-2.xlsx"))
datitos = datitos %>% mutate_if(is.character, as.factor)
datitos.A = datitos %>%
filter(str_detect(Curso, "A"))
datitos.B = datitos %>%
filter(str_detect(Curso, "B"))
esta.si = lapply(datitos.A, function(x) data.frame(table(x)))
esta.si.melt_ = melt(esta.si)
esta.si.melt.p1 = esta.si.melt_[94:172,] ### A
#esta.si.melt.p1 = esta.si.melt_[89:167,] ### B
esta.si.melt.p1$x = ordered(esta.si.melt.p1$x, levels = c("Nada", "Algo", "Bastante", "Mucho"))
esta.si.melt.p2 = esta.si.melt_[173:251,]
#esta.si.melt.p2 = esta.si.melt_[168:246,] ### B
esta.si.melt.p2$x = ordered(esta.si.melt.p2$x, levels = c("Casi nunca", "A veces", "A menudo", "Casi siempre"))
p1 = ggbarplot(esta.si.melt.p1, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p1$value) + ylim(0, 40)
ggpar(p1, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 10, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
p2 = ggbarplot(esta.si.melt.p2, x = "x", y = "value", facet.by = "L1", ggtheme = theme_bw(), xlab = "", ylab = "Frecuencia",
fill = "lightblue", label = esta.si.melt.p2$value) + ylim(0, 40)
ggpar(p2, x.text.angle = 45) +  theme(strip.text.x = element_text(size = 6.35, color = "black", face = "bold"),
axis.text.x = element_text(size = 10, color = "black", face = "bold"))
install.packages("tidyverse")
knitr::opts_chunk$set(echo = FALSE)
read.csv("~/DataScience/portafolio/Data/winemag-data-130k-v2.csv")
wine.data = read.csv("~/DataScience/portafolio/Data/winemag-data-130k-v2.csv")
# Filtrar por datos de Chile
unique(wine.data$country)
wine.data %>% filter(country == "Chile")
suppressPackageStartupMessages(library(dplyr))
wine.data %>% filter(country == "Chile")
# Filtrar por datos de Chile
wine.data.chile =wine.data %>% filter(country == "Chile")
# Filtrar por datos de Chile
wine.data.chile = wine.data %>% filter(country == "Chile")
str(wine.data.chile)
# Variedades
as.data.frame(table(wine.data.chile$winery))
str(wine.data.chile)
# Variedades
as.data.frame(table(wine.data.chile$variety))
# Variedades
as.data.frame(table(wine.data.chile$variety)) %>% filter(Freq != 1)
# Provincia
as.data.frame(table(wine.data.chile$province)) #%>% filter(Freq != 1)
# Provincia
as.data.frame(table(wine.data.chile$province)) #%>% filter(Freq != 1)
# Provincia
as.data.frame(table(wine.data.chile$province)) #%>% filter(Freq != 1)
as.data.frame(table(wine.data.chile$taster_name))
knitr::opts_chunk$set(echo = FALSE)
suppressPackageStartupMessages(library(dplyr))
as.data.frame(table(wine.data.chile$taster_name))
library(readxl)
data_maule_wines = read_excel("~/DataScience/portafolio/Data/muestras mwines.xlsx")
data_maule_wines
data_maule_wines
data_maule_wines
suppressPackageStartupMessages(library(dplyr))
# Leer datos de la revista winemag
wine.data = read.csv("~/DataScience/portafolio/Data/winemag-data-130k-v2.csv")
# Filtrar por datos de Chile
wine.data.chile = wine.data %>% filter(country == "Chile")
str(wine.data.chile)
# Variedades
as.data.frame(table(wine.data.chile$variety)) %>% filter(Freq != 1)
# Provincia
as.data.frame(table(wine.data.chile$province)) #%>% filter(Freq != 1)
as.data.frame(table(wine.data.chile$taster_name))
View(wine.data.chile)
as.data.frame(table(wine.data.chile$winery))
wineries = as.data.frame(table(wine.data.chile$winery))
wineries
writeClipboard(as.vector(wineries$Var1))
as.data.frame(table(data_maule_wines$viña))
wineries_mwines = as.data.frame(table(data_maule_wines$viña))
wineries_mwines
writeClipboard(as.vector(wineries_mwines$Var1))
mtcars = mtcars
View(mtcars)
reticulate::repl_python()
tips = sns.load_dataset("tips")
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
tips = sns.load_dataset("tips")
tips = sns.load_dataset("tips")
View(tips)
mylis = ["youtube","google","tumblr"]
View(mylis)
print(m+" is awesome")
for m in mylis:
print(m+" is awesome")
tips.head()
tips.columns
sns.scatterplot(x=tips['total_bill'], y=tips['tip'], hue='tips')
plt.show()
sns.scatterplot(x=tips['total_bill'], y=tips['tip'], hue='tips')
plt.show()
tips = sns.load_dataset("tips")
sns.scatterplot(x=tips['total_bill'], y=tips['tip'], hue='tips')
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
tips = sns.load_dataset("tips")
mylis = ["youtube","google","tumblr"]
for m in mylis:
print(m+" is awesome")
sns.scatterplot(x=tips['total_bill'], y=tips['tip'], hue='tips')
plt.show()
sns.scatterplot(x=tips['total_bill'], y=tips['tip'], hue=tips['day'])
plt.show()
sns.scatterplot(x=tips['total_bill'], y=tips['tip'])
plt.show()
sns.scatterplot(x=tips['total_bill'], y=tips['tip'])
library(dplyr)
library(ggplot2)
library(ggpubr)
mtcars = mtcars
mtcars
reticulate::repl_python()
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
tips = sns.load_dataset("tips")
mylis = ["youtube","google","tumblr"]
sns.scatterplot(x=tips['total_bill'], y=tips['tip'])
plt.show()
for m in mylis:
print(m+" is awesome")
quit
vaccination_data = read.csv("C:/Users/carlo/OneDrive/Documentos/DataScience/portafolio/Data/vivino_db_maulewines.csv",
quit
sep = ";", dec = ".")
quit
vaccination_data
vaccination_data = read.csv("C:/Users/carlo/OneDrive/Documentos/DataScience/portafolio/Data/vivino_db_maulewines.csv",
sep = ";", dec = ".")
vaccination_data
vaccination_data = read.csv("C:/Users/carlo/OneDrive/Documentos/DataScience/portafolio/Data/country_vaccinations.csv",
sep = ";", dec = ".")
vaccination_data
vaccination_data = read.csv("C:/Users/carlo/OneDrive/Documentos/DataScience/portafolio/Data/country_vaccinations.csv",
sep = ",", dec = ".")
vaccination_data
library(dplyr)
library(ggplot2)
unique(vaccination_data$country)
vaccination_data %>% dplyr::filter(country == "Chile")
library("tidyverse")
install.packages("remotes")
library("remotes")
remotes::install_github("cianciadedatos/datos")
remotes::install_github("cienciadedatos/datos")
remotes::install_github("cienciadedatos/datos")
library(dplyr)
library(ggplot2)
library(janitor)
library(stringr)
find_text_filter <- function(df, tt){
df %>%
filter(if_any(where(is.character), ~str_detect(.x, tt)))
}
df = read.csv("data/athlete_events.csv")
setwd("C:/Users/carlo/OneDrive/repos")
df = read.csv("data/athlete_events.csv")
df %>%
find_text_filter("Tae")
df %>%
filter(Sport == "Taekwondo") %>%
ggplot(., aes(x = Games, y = Height, fill = Sex)) +
geom_boxplot() +
labs (title = "Distribucion de estatura de competidores\n en las últimas 5 competencias olimpicas", x = NULL, y = "Estatura(cm)") +
theme(legend.position = "bottom")
